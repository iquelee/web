html,body,#app,.com-page,.com-container,.com-chart {
  width: 100%;
  height: 100%;
  overflow: hidden;
}


canvas {
   background-color: transparent;
}

// rest
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  outline:none;
}

html {
  font-size: 13px;
}

body {
  
  font-family: Arial, Helvetica, sans-serif;
  line-height: 1.2em;
  background: #f1f1f1;
  -webkit-font-smoothing: antialiased;
}

a {
  color: #999;
}



//colors
$colors: (
  "primary": #02102A,
  "white": #fff,
  "light": #f9f9f9,
  "grey": #999,
  "grey-1":#666,
  "dark-1": #333,
  "dark": #222,
  "black": #000,

);
@each $colorKey, $color in $colors {
  .text-#{$colorKey} {
      color: $color;
  }
  .bg-#{$colorKey} {
      background-color: $color;
  }
}

//border-radius
$border-radius-base: 1px;
$border-radius: (1:2,2:4,3:6,4:8,5:10,6:12,7:16,8:20);
@each $key,$value in $border-radius {
  .br-#{$key} {
      border-radius: $value * $border-radius-base;
  }
}

//text align
@each $var in (left,center,right) {
  .text-#{$var} {
      text-align: $var;
  }
}

//font size
$base-font-size: 1rem;
$font-sizes: (
  xxs:0.6154, //8px
  xs:0.7692, //10px
  s:0.9231, //12px
  m:1, //13px
  lg:1.0769, //14px
  xl:1.2308, //16px
  xxl:1.8462, //24px
);

@each $sizeKey, $size in $font-sizes {
  .fs-#{$sizeKey} {
      font-size: $size * $base-font-size;
  }
}

//font-weight
$font-weight: (1:100,2:200,3:300,4:400,5:500,6:600,7:700,8:800,9:900);
@each $key,$value in $font-weight {
  .fw-#{$key} {
      font-weight: $value;
  }
}

//flex
.d-flex {
  display: flex;
}
.flex-col {
  flex-direction: column;
}
$flex-jc: (
  start:flex-start,
  end:flex-end,
  center:center,
  between:space-between,
  around:space-around,
);

@each $key,$value in $flex-jc {
  .jc-#{$key} {
      justify-content: $value;
  }
}

$flex-ai: (
  start:flex-start,
  end:flex-end,
  center:center,
  stretch:stretch,
);

@each $key,$value in $flex-ai {
  .ai-#{$key} {
      align-items: $value;
  }
}

$flex-scales:(1:1,2:2,3:3,4:4,5:5,6:6,7:7,8:8,9:9);
@each $key,$value in $flex-scales {
  .flex-#{$key} {
      flex: $value;
  }
}

//spacing
$spacing-types:(m:margin,p:padding);
$spacing-directions:(t:top,r:right,b:bottom,l:left);
$spacing-base-size:1rem;
$spacing-sizes:(0:0,1:0.25,2:0.5,3:1,4:1.5,5:3);
//.m-1
@each $typeKey,$type in $spacing-types {
  @each $sizeKey,$size in $spacing-sizes {
      .#{$typeKey}-#{$sizeKey} {
          #{$type}:$size * $spacing-base-size;
      }
  }
}

//.mx-1,.my-1
@each $typeKey,$type in $spacing-types {
  @each $sizeKey ,$size in $spacing-sizes {
      .#{$typeKey}x-#{$sizeKey} {
          #{$type}-left:$size * $spacing-base-size;
          #{$type}-right:$size * $spacing-base-size;
      }
      .#{$typeKey}y-#{$sizeKey} {
          #{$type}-top: $size * $spacing-base-size;
          #{$type}-bottom : $size * $spacing-base-size;
      }
  }
}

//.mt-1
@each $typeKey,$type in $spacing-types {
  @each $directionKey,$direction in $spacing-directions {
      @each $sizeKey ,$size in $spacing-sizes {
          .#{$typeKey}#{$directionKey}-#{$sizeKey} {
              #{$type}-#{$direction}:$size * $spacing-base-size;
          }
      }
  } 
}

//btn
.btn {
  border:none;
  border-radius: 0.1538rem;
  font-size: map-get($font-sizes, 's') * $base-font-size;
  padding: 0.2rem 0.6rem;
}

//nav
.nav {
  .nav-item {
      width: 100%;
      color: map-get($colors ,"white");
      &.active {
          color:map-get($colors , "primary" );
      };
      &:hover {
          background-color:map-get($colors , "black" )
      }
  }
}



